openapi: 3.0.0

info:
  title:
    Fn::Sub: emotion-journaling-application-backend-${Stage}
  description: A simplified implementation of AWS Serverless Application Repository
  version: 2019-10-13

# Enable request validator. See doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-validation-sample-api-swagger.html
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: all

x-amazon-apigateway-gateway-responses:
  # Provide more detailed error message for bad request body errors. See doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-gateway-responses.html
  BAD_REQUEST_BODY:
    responseTemplates:
      application/json: '{"errorCode": "BadRequestBody", "message": "$context.error.validationErrorString"}'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        
paths:
  /therapist:
    summary: Operations about the therapist
    description: Contains the list of operations of therapists
    get:
      tags:
        - Therapist
      summary: Get list of therapists
      description: Returns the list of therapists
      operationId: getTherapistList
      parameters:
        - name: nextToken
          in: query
          required: false
          schema:
            type: string
        - name: maxItems
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        '200' :
          $ref: '#/components/responses/200TherapistListResponse'
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "401":
          description: "Unauthorized Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "429":
          description: "Too Many Requests Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        '500':
          $ref: '#/components/responses/500Response'
        default:
          description: Success
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
    post:
      tags:
        - Therapist
      summary: Add a new therapist
      description: Adds a new therapist and returns the added therapist
      operationId: addTherapist
      responses:
        '201' :
          $ref: '#/components/responses/200TherapistResponse'
        '400':
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "401":
          description: "Unauthorized Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "409":
          description: "Conflict Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "429":
          description: "Too Many Requests Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        '500':
          $ref: '#/components/responses/500Response'
        default:
          description: Success
      requestBody:
        description: The new therapist to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Therapist'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
  /therapist/{therapistId}:
    summary: Operations on a particular therapist
    description: Contains the list of operations on a therapist given in the therapistId
    get:
      tags:
        - Therapist
      summary: Get details of a single therapist
      description: Returns the details of the given therapistId 
      operationId: getTherapist
      parameters: 
        - name: therapistId
          in: path
          description: The unique therapist ID
          required: true
          schema:
            type: string
      responses:
        '200' :
          $ref: '#/components/responses/200TherapistResponse'
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "401":
          description: "Unauthorized Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "404":
          description: "Not Found Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "429":
          description: "Too Many Requests Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        '500':
          $ref: '#/components/responses/500Response'
        default:
          description: Success
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
    put:
      tags:
        - Therapist
      summary: Update the details of a therapist
      description: Updates the details of the given therapist Id
      operationId: updateTherapist
      parameters: 
        - name: therapistId
          in: path
          description: The unique therapist ID
          required: true
          schema:
            type: string
      responses:
        '200' :
          $ref: '#/components/responses/200TherapistResponse'
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "401":
          description: "Unauthorized Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "404":
          description: "Not Found Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "429":
          description: "Too Many Requests Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        '500':
          $ref: '#/components/responses/500Response'
        default:
          description: Success
      requestBody:
        description: The therapist details to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Therapist'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
    delete:
      tags:
        - Therapist
      summary: Deletes the details of a therapist
      description: Deletes the details of the given therapist Id
      operationId: deleteTherapist
      parameters: 
        - name: therapistId
          in: path
          description: The unique therapist ID
          required: true
          schema:
            type: string
      responses:
        '204' :
          description: "Successfully delete an application"
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "401":
          description: "Unauthorized Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "404":
          description: "Not Found Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "429":
          description: "Too Many Requests Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        '500':
          $ref: '#/components/responses/500Response'
        default:
          description: Success
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
  /therapist/search:
    summary: Operations on searching a therapist by therapist type or area
    description: Contains the list of operations for clients to search therapists by their type or area
    get:
      tags:
        - Therapist
      summary: Get details of therapist type or area given by the client
      description: Returns the details of the therapist type or area given by client
      operationId: getTherapistByNTA
      parameters: 
        - name: therapistArea
          in: query
          description: Area of therapist being searched
          required: true
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          schema:
            type: string
        - name: therapistType
          in: query
          description: Type of therapist being searched
          required: false
          schema:
            type: string
      responses:
        '200' :
          $ref: '#/components/responses/200TherapistListResponse'
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "401":
          description: "Unauthorized Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "429":
          description: "Too Many Requests Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        '500':
          $ref: '#/components/responses/500Response'
        default:
          description: Success
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never

components:
  schemas:
    BadRequestException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    UnauthorizedException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    NotFoundException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    ConflictException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    TooManyRequestsException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    InternalServerErrorException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    Therapist:
      type: object
      description: Represents a therapist entry
      properties:
        therapistId:
          type: string
          description: Unique ID of a therapist
        therapistName:
          type: string
          description: Name of the therapist
        creationTime:
          type: string
        therapistMob:
          type: string
          description: Mobile number of the therapist
        therapistArea:
          type: string
          description: Area of the place from where the therapists operates
        therapistType:
          type: string
          description: Type of the therapist
      required:
        - therapistName
        - therapistArea
        - therapistType
      example: 
        therapistId: 1
        therapistName: Dr. Prateek Gupta
        therapistMob: 9785462130
        therapistArea: 226029
        therapistType: Counsellor
    TherapistSummary:
      type: object
      properties:
        therapistId:
          type: string
          description: Unique ID of a therapist
        therapistName:
          type: string
          description: Name of the therapist
        therapistMob:
          type: string
          description: Mobile number of the therapist
        therapistArea:
          type: string
          description: Area of the place from where the therapists operates
        therapistType:
          type: string
          description: Type of the therapist
        creationTime:
          type: string
    TherapistList:
      type: object
      properties:
        therapist:
          type: array
          items:
            $ref: "#/components/schemas/TherapistSummary"
        nextToken:
          type: string
      example:
        - 
          - therapistId: 1
          - therapistName: Dr. Prateek Gupta
          - therapistMob: 9785462130
          - therapistArea: 226029
          - therapistType: Counsellor
        - 
          - therapistId: 2
          - therapistName: Dr. Anurag Gupta
          - therapistMob: 9785462130
          - therapistArea: 226027
          - therapistType: Psychologist
  
  responses:
    200Response:
      description: Success
    200TherapistResponse:
      description: Successfully added a therapist
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Therapist'
    200TherapistListResponse:
      description: Successfully returned a list of therapists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TherapistList'
    400Response:
      description: Bad Request Error
    500Response:
      description: Internal Server Error